// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cluster.proto

package clusterpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MemberInfo struct {
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label"`
	ServiceAddr          string   `protobuf:"bytes,2,opt,name=serviceAddr,proto3" json:"serviceAddr"`
	Services             []string `protobuf:"bytes,3,rep,name=services,proto3" json:"services"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberInfo) Reset()         { *m = MemberInfo{} }
func (m *MemberInfo) String() string { return proto.CompactTextString(m) }
func (*MemberInfo) ProtoMessage()    {}
func (*MemberInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{0}
}

func (m *MemberInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberInfo.Unmarshal(m, b)
}
func (m *MemberInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberInfo.Marshal(b, m, deterministic)
}
func (m *MemberInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberInfo.Merge(m, src)
}
func (m *MemberInfo) XXX_Size() int {
	return xxx_messageInfo_MemberInfo.Size(m)
}
func (m *MemberInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MemberInfo proto.InternalMessageInfo

func (m *MemberInfo) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *MemberInfo) GetServiceAddr() string {
	if m != nil {
		return m.ServiceAddr
	}
	return ""
}

func (m *MemberInfo) GetServices() []string {
	if m != nil {
		return m.Services
	}
	return nil
}

type RegisterRequest struct {
	MemberInfo           *MemberInfo `protobuf:"bytes,1,opt,name=memberInfo,proto3" json:"memberInfo"`
	IsHeartbeat          bool        `protobuf:"varint,2,opt,name=isHeartbeat,proto3" json:"isHeartbeat"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{1}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetMemberInfo() *MemberInfo {
	if m != nil {
		return m.MemberInfo
	}
	return nil
}

func (m *RegisterRequest) GetIsHeartbeat() bool {
	if m != nil {
		return m.IsHeartbeat
	}
	return false
}

type RegisterResponse struct {
	Members              []*MemberInfo `protobuf:"bytes,1,rep,name=members,proto3" json:"members"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{2}
}

func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (m *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(m, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetMembers() []*MemberInfo {
	if m != nil {
		return m.Members
	}
	return nil
}

type UnregisterRequest struct {
	ServiceAddr          string   `protobuf:"bytes,1,opt,name=serviceAddr,proto3" json:"serviceAddr"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterRequest) Reset()         { *m = UnregisterRequest{} }
func (m *UnregisterRequest) String() string { return proto.CompactTextString(m) }
func (*UnregisterRequest) ProtoMessage()    {}
func (*UnregisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{3}
}

func (m *UnregisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterRequest.Unmarshal(m, b)
}
func (m *UnregisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterRequest.Marshal(b, m, deterministic)
}
func (m *UnregisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterRequest.Merge(m, src)
}
func (m *UnregisterRequest) XXX_Size() int {
	return xxx_messageInfo_UnregisterRequest.Size(m)
}
func (m *UnregisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterRequest proto.InternalMessageInfo

func (m *UnregisterRequest) GetServiceAddr() string {
	if m != nil {
		return m.ServiceAddr
	}
	return ""
}

type UnregisterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterResponse) Reset()         { *m = UnregisterResponse{} }
func (m *UnregisterResponse) String() string { return proto.CompactTextString(m) }
func (*UnregisterResponse) ProtoMessage()    {}
func (*UnregisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{4}
}

func (m *UnregisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterResponse.Unmarshal(m, b)
}
func (m *UnregisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterResponse.Marshal(b, m, deterministic)
}
func (m *UnregisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterResponse.Merge(m, src)
}
func (m *UnregisterResponse) XXX_Size() int {
	return xxx_messageInfo_UnregisterResponse.Size(m)
}
func (m *UnregisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterResponse proto.InternalMessageInfo

type RequestMessage struct {
	GateAddr             string   `protobuf:"bytes,1,opt,name=gateAddr,proto3" json:"gateAddr"`
	SessionId            int64    `protobuf:"varint,2,opt,name=sessionId,proto3" json:"sessionId"`
	Id                   uint64   `protobuf:"varint,3,opt,name=id,proto3" json:"id"`
	Route                string   `protobuf:"bytes,4,opt,name=route,proto3" json:"route"`
	Data                 []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestMessage) Reset()         { *m = RequestMessage{} }
func (m *RequestMessage) String() string { return proto.CompactTextString(m) }
func (*RequestMessage) ProtoMessage()    {}
func (*RequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{5}
}

func (m *RequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestMessage.Unmarshal(m, b)
}
func (m *RequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestMessage.Marshal(b, m, deterministic)
}
func (m *RequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestMessage.Merge(m, src)
}
func (m *RequestMessage) XXX_Size() int {
	return xxx_messageInfo_RequestMessage.Size(m)
}
func (m *RequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RequestMessage proto.InternalMessageInfo

func (m *RequestMessage) GetGateAddr() string {
	if m != nil {
		return m.GateAddr
	}
	return ""
}

func (m *RequestMessage) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *RequestMessage) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RequestMessage) GetRoute() string {
	if m != nil {
		return m.Route
	}
	return ""
}

func (m *RequestMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type NotifyMessage struct {
	GateAddr             string   `protobuf:"bytes,1,opt,name=gateAddr,proto3" json:"gateAddr"`
	SessionId            int64    `protobuf:"varint,2,opt,name=sessionId,proto3" json:"sessionId"`
	Route                string   `protobuf:"bytes,3,opt,name=route,proto3" json:"route"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyMessage) Reset()         { *m = NotifyMessage{} }
func (m *NotifyMessage) String() string { return proto.CompactTextString(m) }
func (*NotifyMessage) ProtoMessage()    {}
func (*NotifyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{6}
}

func (m *NotifyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyMessage.Unmarshal(m, b)
}
func (m *NotifyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyMessage.Marshal(b, m, deterministic)
}
func (m *NotifyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyMessage.Merge(m, src)
}
func (m *NotifyMessage) XXX_Size() int {
	return xxx_messageInfo_NotifyMessage.Size(m)
}
func (m *NotifyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyMessage proto.InternalMessageInfo

func (m *NotifyMessage) GetGateAddr() string {
	if m != nil {
		return m.GateAddr
	}
	return ""
}

func (m *NotifyMessage) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *NotifyMessage) GetRoute() string {
	if m != nil {
		return m.Route
	}
	return ""
}

func (m *NotifyMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ResponseMessage struct {
	SessionId            int64    `protobuf:"varint,1,opt,name=sessionId,proto3" json:"sessionId"`
	Id                   uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseMessage) Reset()         { *m = ResponseMessage{} }
func (m *ResponseMessage) String() string { return proto.CompactTextString(m) }
func (*ResponseMessage) ProtoMessage()    {}
func (*ResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{7}
}

func (m *ResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseMessage.Unmarshal(m, b)
}
func (m *ResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseMessage.Marshal(b, m, deterministic)
}
func (m *ResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseMessage.Merge(m, src)
}
func (m *ResponseMessage) XXX_Size() int {
	return xxx_messageInfo_ResponseMessage.Size(m)
}
func (m *ResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseMessage proto.InternalMessageInfo

func (m *ResponseMessage) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *ResponseMessage) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResponseMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PushMessage struct {
	SessionId            int64    `protobuf:"varint,1,opt,name=sessionId,proto3" json:"sessionId"`
	Route                string   `protobuf:"bytes,2,opt,name=route,proto3" json:"route"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushMessage) Reset()         { *m = PushMessage{} }
func (m *PushMessage) String() string { return proto.CompactTextString(m) }
func (*PushMessage) ProtoMessage()    {}
func (*PushMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{8}
}

func (m *PushMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushMessage.Unmarshal(m, b)
}
func (m *PushMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushMessage.Marshal(b, m, deterministic)
}
func (m *PushMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushMessage.Merge(m, src)
}
func (m *PushMessage) XXX_Size() int {
	return xxx_messageInfo_PushMessage.Size(m)
}
func (m *PushMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PushMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PushMessage proto.InternalMessageInfo

func (m *PushMessage) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *PushMessage) GetRoute() string {
	if m != nil {
		return m.Route
	}
	return ""
}

func (m *PushMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type MemberHandleResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberHandleResponse) Reset()         { *m = MemberHandleResponse{} }
func (m *MemberHandleResponse) String() string { return proto.CompactTextString(m) }
func (*MemberHandleResponse) ProtoMessage()    {}
func (*MemberHandleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{9}
}

func (m *MemberHandleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberHandleResponse.Unmarshal(m, b)
}
func (m *MemberHandleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberHandleResponse.Marshal(b, m, deterministic)
}
func (m *MemberHandleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberHandleResponse.Merge(m, src)
}
func (m *MemberHandleResponse) XXX_Size() int {
	return xxx_messageInfo_MemberHandleResponse.Size(m)
}
func (m *MemberHandleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberHandleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MemberHandleResponse proto.InternalMessageInfo

type NewMemberRequest struct {
	MemberInfo           *MemberInfo `protobuf:"bytes,1,opt,name=memberInfo,proto3" json:"memberInfo"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NewMemberRequest) Reset()         { *m = NewMemberRequest{} }
func (m *NewMemberRequest) String() string { return proto.CompactTextString(m) }
func (*NewMemberRequest) ProtoMessage()    {}
func (*NewMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{10}
}

func (m *NewMemberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewMemberRequest.Unmarshal(m, b)
}
func (m *NewMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewMemberRequest.Marshal(b, m, deterministic)
}
func (m *NewMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewMemberRequest.Merge(m, src)
}
func (m *NewMemberRequest) XXX_Size() int {
	return xxx_messageInfo_NewMemberRequest.Size(m)
}
func (m *NewMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewMemberRequest proto.InternalMessageInfo

func (m *NewMemberRequest) GetMemberInfo() *MemberInfo {
	if m != nil {
		return m.MemberInfo
	}
	return nil
}

type NewMemberResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewMemberResponse) Reset()         { *m = NewMemberResponse{} }
func (m *NewMemberResponse) String() string { return proto.CompactTextString(m) }
func (*NewMemberResponse) ProtoMessage()    {}
func (*NewMemberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{11}
}

func (m *NewMemberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewMemberResponse.Unmarshal(m, b)
}
func (m *NewMemberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewMemberResponse.Marshal(b, m, deterministic)
}
func (m *NewMemberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewMemberResponse.Merge(m, src)
}
func (m *NewMemberResponse) XXX_Size() int {
	return xxx_messageInfo_NewMemberResponse.Size(m)
}
func (m *NewMemberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewMemberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewMemberResponse proto.InternalMessageInfo

type DelMemberRequest struct {
	ServiceAddr          string   `protobuf:"bytes,1,opt,name=serviceAddr,proto3" json:"serviceAddr"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelMemberRequest) Reset()         { *m = DelMemberRequest{} }
func (m *DelMemberRequest) String() string { return proto.CompactTextString(m) }
func (*DelMemberRequest) ProtoMessage()    {}
func (*DelMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{12}
}

func (m *DelMemberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelMemberRequest.Unmarshal(m, b)
}
func (m *DelMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelMemberRequest.Marshal(b, m, deterministic)
}
func (m *DelMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelMemberRequest.Merge(m, src)
}
func (m *DelMemberRequest) XXX_Size() int {
	return xxx_messageInfo_DelMemberRequest.Size(m)
}
func (m *DelMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DelMemberRequest proto.InternalMessageInfo

func (m *DelMemberRequest) GetServiceAddr() string {
	if m != nil {
		return m.ServiceAddr
	}
	return ""
}

type DelMemberResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelMemberResponse) Reset()         { *m = DelMemberResponse{} }
func (m *DelMemberResponse) String() string { return proto.CompactTextString(m) }
func (*DelMemberResponse) ProtoMessage()    {}
func (*DelMemberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{13}
}

func (m *DelMemberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelMemberResponse.Unmarshal(m, b)
}
func (m *DelMemberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelMemberResponse.Marshal(b, m, deterministic)
}
func (m *DelMemberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelMemberResponse.Merge(m, src)
}
func (m *DelMemberResponse) XXX_Size() int {
	return xxx_messageInfo_DelMemberResponse.Size(m)
}
func (m *DelMemberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DelMemberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DelMemberResponse proto.InternalMessageInfo

type SessionClosedRequest struct {
	SessionId            int64    `protobuf:"varint,1,opt,name=sessionId,proto3" json:"sessionId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionClosedRequest) Reset()         { *m = SessionClosedRequest{} }
func (m *SessionClosedRequest) String() string { return proto.CompactTextString(m) }
func (*SessionClosedRequest) ProtoMessage()    {}
func (*SessionClosedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{14}
}

func (m *SessionClosedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionClosedRequest.Unmarshal(m, b)
}
func (m *SessionClosedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionClosedRequest.Marshal(b, m, deterministic)
}
func (m *SessionClosedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionClosedRequest.Merge(m, src)
}
func (m *SessionClosedRequest) XXX_Size() int {
	return xxx_messageInfo_SessionClosedRequest.Size(m)
}
func (m *SessionClosedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionClosedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionClosedRequest proto.InternalMessageInfo

func (m *SessionClosedRequest) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type SessionClosedResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionClosedResponse) Reset()         { *m = SessionClosedResponse{} }
func (m *SessionClosedResponse) String() string { return proto.CompactTextString(m) }
func (*SessionClosedResponse) ProtoMessage()    {}
func (*SessionClosedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{15}
}

func (m *SessionClosedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionClosedResponse.Unmarshal(m, b)
}
func (m *SessionClosedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionClosedResponse.Marshal(b, m, deterministic)
}
func (m *SessionClosedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionClosedResponse.Merge(m, src)
}
func (m *SessionClosedResponse) XXX_Size() int {
	return xxx_messageInfo_SessionClosedResponse.Size(m)
}
func (m *SessionClosedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionClosedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SessionClosedResponse proto.InternalMessageInfo

type CloseSessionRequest struct {
	SessionId            int64    `protobuf:"varint,1,opt,name=sessionId,proto3" json:"sessionId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseSessionRequest) Reset()         { *m = CloseSessionRequest{} }
func (m *CloseSessionRequest) String() string { return proto.CompactTextString(m) }
func (*CloseSessionRequest) ProtoMessage()    {}
func (*CloseSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{16}
}

func (m *CloseSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseSessionRequest.Unmarshal(m, b)
}
func (m *CloseSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseSessionRequest.Marshal(b, m, deterministic)
}
func (m *CloseSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseSessionRequest.Merge(m, src)
}
func (m *CloseSessionRequest) XXX_Size() int {
	return xxx_messageInfo_CloseSessionRequest.Size(m)
}
func (m *CloseSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseSessionRequest proto.InternalMessageInfo

func (m *CloseSessionRequest) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type CloseSessionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseSessionResponse) Reset()         { *m = CloseSessionResponse{} }
func (m *CloseSessionResponse) String() string { return proto.CompactTextString(m) }
func (*CloseSessionResponse) ProtoMessage()    {}
func (*CloseSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{17}
}

func (m *CloseSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseSessionResponse.Unmarshal(m, b)
}
func (m *CloseSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseSessionResponse.Marshal(b, m, deterministic)
}
func (m *CloseSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseSessionResponse.Merge(m, src)
}
func (m *CloseSessionResponse) XXX_Size() int {
	return xxx_messageInfo_CloseSessionResponse.Size(m)
}
func (m *CloseSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseSessionResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MemberInfo)(nil), "clusterpb.MemberInfo")
	proto.RegisterType((*RegisterRequest)(nil), "clusterpb.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "clusterpb.RegisterResponse")
	proto.RegisterType((*UnregisterRequest)(nil), "clusterpb.UnregisterRequest")
	proto.RegisterType((*UnregisterResponse)(nil), "clusterpb.UnregisterResponse")
	proto.RegisterType((*RequestMessage)(nil), "clusterpb.RequestMessage")
	proto.RegisterType((*NotifyMessage)(nil), "clusterpb.NotifyMessage")
	proto.RegisterType((*ResponseMessage)(nil), "clusterpb.ResponseMessage")
	proto.RegisterType((*PushMessage)(nil), "clusterpb.PushMessage")
	proto.RegisterType((*MemberHandleResponse)(nil), "clusterpb.MemberHandleResponse")
	proto.RegisterType((*NewMemberRequest)(nil), "clusterpb.NewMemberRequest")
	proto.RegisterType((*NewMemberResponse)(nil), "clusterpb.NewMemberResponse")
	proto.RegisterType((*DelMemberRequest)(nil), "clusterpb.DelMemberRequest")
	proto.RegisterType((*DelMemberResponse)(nil), "clusterpb.DelMemberResponse")
	proto.RegisterType((*SessionClosedRequest)(nil), "clusterpb.SessionClosedRequest")
	proto.RegisterType((*SessionClosedResponse)(nil), "clusterpb.SessionClosedResponse")
	proto.RegisterType((*CloseSessionRequest)(nil), "clusterpb.CloseSessionRequest")
	proto.RegisterType((*CloseSessionResponse)(nil), "clusterpb.CloseSessionResponse")
}

func init() { proto.RegisterFile("cluster.proto", fileDescriptor_3cfb3b8ec240c376) }

var fileDescriptor_3cfb3b8ec240c376 = []byte{
	// 607 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x95, 0xdd, 0x72, 0xd2, 0x40,
	0x14, 0xc7, 0x1b, 0x42, 0x2b, 0x1c, 0x3e, 0x84, 0x03, 0xc5, 0x18, 0x51, 0x33, 0xb9, 0xe2, 0x0a,
	0x67, 0xa8, 0x7d, 0x00, 0xa7, 0x3a, 0xc2, 0x38, 0x54, 0x4d, 0xed, 0xbd, 0xa1, 0xd9, 0x62, 0x9c,
	0x94, 0x60, 0x36, 0xe8, 0x78, 0xef, 0x63, 0xf8, 0xa6, 0xde, 0x38, 0xc9, 0x26, 0xcb, 0xd9, 0x10,
	0x94, 0x99, 0xde, 0xb1, 0x67, 0xf7, 0xfc, 0xce, 0xe7, 0x9f, 0x40, 0xeb, 0x26, 0xd8, 0xf0, 0x98,
	0x45, 0xe3, 0x75, 0x14, 0xc6, 0x21, 0xd6, 0xb3, 0xe3, 0x7a, 0x61, 0x7f, 0x06, 0x98, 0xb3, 0xbb,
	0x05, 0x8b, 0x66, 0xab, 0xdb, 0x10, 0xfb, 0x70, 0x1c, 0xb8, 0x0b, 0x16, 0x18, 0x9a, 0xa5, 0x8d,
	0xea, 0x8e, 0x38, 0xa0, 0x05, 0x0d, 0xce, 0xa2, 0xef, 0xfe, 0x0d, 0x7b, 0xe5, 0x79, 0x91, 0x51,
	0x49, 0xef, 0xa8, 0x09, 0x4d, 0xa8, 0x65, 0x47, 0x6e, 0xe8, 0x96, 0x3e, 0xaa, 0x3b, 0xf2, 0x6c,
	0x7f, 0x85, 0x87, 0x0e, 0x5b, 0xfa, 0x49, 0x3c, 0x87, 0x7d, 0xdb, 0x30, 0x1e, 0xe3, 0x39, 0xc0,
	0x9d, 0x0c, 0x9a, 0xc6, 0x6a, 0x4c, 0x4e, 0xc7, 0x32, 0xa9, 0xf1, 0x36, 0x23, 0x87, 0x3c, 0x4c,
	0xf2, 0xf0, 0xf9, 0x94, 0xb9, 0x51, 0xbc, 0x60, 0x6e, 0x9c, 0xe6, 0x51, 0x73, 0xa8, 0xc9, 0xbe,
	0x80, 0xce, 0x36, 0x16, 0x5f, 0x87, 0x2b, 0xce, 0xf0, 0x05, 0x3c, 0x10, 0x0c, 0x6e, 0x68, 0x96,
	0xbe, 0x3f, 0x52, 0xfe, 0xca, 0x3e, 0x87, 0xee, 0xf5, 0x2a, 0x2a, 0xa4, 0x5c, 0xe8, 0x81, 0xb6,
	0xd3, 0x03, 0xbb, 0x0f, 0x48, 0xdd, 0x44, 0x74, 0xfb, 0x97, 0x06, 0xed, 0x8c, 0x31, 0x67, 0x9c,
	0xbb, 0x4b, 0x96, 0x34, 0x6b, 0xe9, 0xc6, 0x94, 0x23, 0xcf, 0x38, 0x84, 0x3a, 0x67, 0x9c, 0xfb,
	0xe1, 0x6a, 0xe6, 0xa5, 0x05, 0xea, 0xce, 0xd6, 0x80, 0x6d, 0xa8, 0xf8, 0x9e, 0xa1, 0x5b, 0xda,
	0xa8, 0xea, 0x54, 0x7c, 0x2f, 0x19, 0x57, 0x14, 0x6e, 0x62, 0x66, 0x54, 0xc5, 0xb8, 0xd2, 0x03,
	0x22, 0x54, 0x3d, 0x37, 0x76, 0x8d, 0x63, 0x4b, 0x1b, 0x35, 0x9d, 0xf4, 0xb7, 0xcd, 0xa1, 0x75,
	0x19, 0xc6, 0xfe, 0xed, 0xcf, 0xfb, 0x27, 0x21, 0x83, 0xea, 0x65, 0x41, 0xab, 0x24, 0xe8, 0x55,
	0x32, 0x79, 0xd1, 0x87, 0x3c, 0xac, 0x82, 0xd6, 0xca, 0xeb, 0xab, 0xc8, 0xfa, 0x72, 0xa8, 0x4e,
	0xa0, 0xd7, 0xd0, 0xf8, 0xb0, 0xe1, 0x5f, 0x0e, 0x03, 0xca, 0x5c, 0x2b, 0x65, 0xb9, 0x52, 0xec,
	0x00, 0xfa, 0x62, 0x17, 0xa6, 0xee, 0xca, 0x0b, 0x98, 0x9c, 0xdf, 0x0c, 0x3a, 0x97, 0xec, 0x87,
	0xb8, 0xba, 0xdf, 0xfa, 0xda, 0x3d, 0xe8, 0x12, 0x54, 0xc6, 0x7f, 0x09, 0x9d, 0xd7, 0x2c, 0x50,
	0xf9, 0xff, 0xdf, 0xb5, 0x1e, 0x74, 0x89, 0x97, 0x44, 0xf5, 0xaf, 0x44, 0xe5, 0x17, 0x41, 0xc8,
	0x99, 0x97, 0xe3, 0xfe, 0xd9, 0x22, 0xfb, 0x11, 0x9c, 0x16, 0xbc, 0x32, 0xdc, 0x19, 0xf4, 0x52,
	0x4b, 0x76, 0x7b, 0x18, 0x6d, 0x00, 0x7d, 0xd5, 0x49, 0xc0, 0x26, 0xbf, 0x35, 0x38, 0x99, 0xbb,
	0x49, 0x7f, 0xf0, 0x0d, 0xd4, 0x72, 0x8d, 0xa2, 0x49, 0xba, 0x56, 0xf8, 0x93, 0x30, 0x9f, 0x94,
	0xde, 0x65, 0xc9, 0x1d, 0xe1, 0x3b, 0x80, 0xad, 0xdc, 0x70, 0x48, 0x1e, 0xef, 0x88, 0xd7, 0x7c,
	0xba, 0xe7, 0x36, 0x87, 0x4d, 0xfe, 0x54, 0xe1, 0x44, 0x74, 0x13, 0xe7, 0xd0, 0xca, 0x57, 0x40,
	0x14, 0xfc, 0x58, 0xc9, 0x83, 0x2a, 0xd9, 0x7c, 0xbe, 0x33, 0xf4, 0xc2, 0xf6, 0x24, 0x69, 0x36,
	0x85, 0x4d, 0xc8, 0x0f, 0x0d, 0xe2, 0xa2, 0x28, 0xf2, 0x10, 0xd8, 0x5b, 0x00, 0x61, 0x4b, 0x14,
	0x80, 0x03, 0xe2, 0x40, 0x24, 0x71, 0x08, 0xe8, 0x3d, 0xb4, 0x55, 0x5b, 0x61, 0x12, 0x8a, 0x68,
	0x0f, 0x01, 0x4e, 0xa1, 0x2e, 0x77, 0x1b, 0xe9, 0xe4, 0x8a, 0xe2, 0x31, 0x87, 0xe5, 0x97, 0x94,
	0x24, 0x57, 0x5b, 0x21, 0x15, 0x65, 0xa2, 0x90, 0x76, 0xd5, 0x70, 0x84, 0x9f, 0xa0, 0xa5, 0x6c,
	0x36, 0xd2, 0x3a, 0xca, 0x94, 0x62, 0x5a, 0xfb, 0x1f, 0x48, 0xea, 0x47, 0x68, 0xd2, 0x0d, 0xc7,
	0x67, 0xc4, 0xa7, 0x44, 0x2f, 0x4a, 0xf3, 0xca, 0xa4, 0x61, 0x1f, 0x2d, 0x4e, 0xd2, 0xaf, 0xf2,
	0xd9, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x41, 0x0b, 0x76, 0x6e, 0xa6, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MasterClient is the client API for Master service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MasterClient interface {
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	Unregister(ctx context.Context, in *UnregisterRequest, opts ...grpc.CallOption) (*UnregisterResponse, error)
}

type masterClient struct {
	cc *grpc.ClientConn
}

func NewMasterClient(cc *grpc.ClientConn) MasterClient {
	return &masterClient{cc}
}

func (c *masterClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/clusterpb.Master/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) Unregister(ctx context.Context, in *UnregisterRequest, opts ...grpc.CallOption) (*UnregisterResponse, error) {
	out := new(UnregisterResponse)
	err := c.cc.Invoke(ctx, "/clusterpb.Master/Unregister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MasterServer is the server API for Master service.
type MasterServer interface {
	Register(context.Context, *RegisterRequest) (*RegisterResponse, error)
	Unregister(context.Context, *UnregisterRequest) (*UnregisterResponse, error)
}

// UnimplementedMasterServer can be embedded to have forward compatible implementations.
type UnimplementedMasterServer struct {
}

func (*UnimplementedMasterServer) Register(ctx context.Context, req *RegisterRequest) (*RegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedMasterServer) Unregister(ctx context.Context, req *UnregisterRequest) (*UnregisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unregister not implemented")
}

func RegisterMasterServer(s *grpc.Server, srv MasterServer) {
	s.RegisterService(&_Master_serviceDesc, srv)
}

func _Master_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterpb.Master/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_Unregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).Unregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterpb.Master/Unregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).Unregister(ctx, req.(*UnregisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Master_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clusterpb.Master",
	HandlerType: (*MasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _Master_Register_Handler,
		},
		{
			MethodName: "Unregister",
			Handler:    _Master_Unregister_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cluster.proto",
}

// MemberClient is the client API for Member service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MemberClient interface {
	HandleRequest(ctx context.Context, in *RequestMessage, opts ...grpc.CallOption) (*MemberHandleResponse, error)
	HandleNotify(ctx context.Context, in *NotifyMessage, opts ...grpc.CallOption) (*MemberHandleResponse, error)
	HandlePush(ctx context.Context, in *PushMessage, opts ...grpc.CallOption) (*MemberHandleResponse, error)
	HandleResponse(ctx context.Context, in *ResponseMessage, opts ...grpc.CallOption) (*MemberHandleResponse, error)
	NewMember(ctx context.Context, in *NewMemberRequest, opts ...grpc.CallOption) (*NewMemberResponse, error)
	DelMember(ctx context.Context, in *DelMemberRequest, opts ...grpc.CallOption) (*DelMemberResponse, error)
	SessionClosed(ctx context.Context, in *SessionClosedRequest, opts ...grpc.CallOption) (*SessionClosedResponse, error)
	CloseSession(ctx context.Context, in *CloseSessionRequest, opts ...grpc.CallOption) (*CloseSessionResponse, error)
}

type memberClient struct {
	cc *grpc.ClientConn
}

func NewMemberClient(cc *grpc.ClientConn) MemberClient {
	return &memberClient{cc}
}

func (c *memberClient) HandleRequest(ctx context.Context, in *RequestMessage, opts ...grpc.CallOption) (*MemberHandleResponse, error) {
	out := new(MemberHandleResponse)
	err := c.cc.Invoke(ctx, "/clusterpb.Member/HandleRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberClient) HandleNotify(ctx context.Context, in *NotifyMessage, opts ...grpc.CallOption) (*MemberHandleResponse, error) {
	out := new(MemberHandleResponse)
	err := c.cc.Invoke(ctx, "/clusterpb.Member/HandleNotify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberClient) HandlePush(ctx context.Context, in *PushMessage, opts ...grpc.CallOption) (*MemberHandleResponse, error) {
	out := new(MemberHandleResponse)
	err := c.cc.Invoke(ctx, "/clusterpb.Member/HandlePush", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberClient) HandleResponse(ctx context.Context, in *ResponseMessage, opts ...grpc.CallOption) (*MemberHandleResponse, error) {
	out := new(MemberHandleResponse)
	err := c.cc.Invoke(ctx, "/clusterpb.Member/HandleResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberClient) NewMember(ctx context.Context, in *NewMemberRequest, opts ...grpc.CallOption) (*NewMemberResponse, error) {
	out := new(NewMemberResponse)
	err := c.cc.Invoke(ctx, "/clusterpb.Member/NewMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberClient) DelMember(ctx context.Context, in *DelMemberRequest, opts ...grpc.CallOption) (*DelMemberResponse, error) {
	out := new(DelMemberResponse)
	err := c.cc.Invoke(ctx, "/clusterpb.Member/DelMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberClient) SessionClosed(ctx context.Context, in *SessionClosedRequest, opts ...grpc.CallOption) (*SessionClosedResponse, error) {
	out := new(SessionClosedResponse)
	err := c.cc.Invoke(ctx, "/clusterpb.Member/SessionClosed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberClient) CloseSession(ctx context.Context, in *CloseSessionRequest, opts ...grpc.CallOption) (*CloseSessionResponse, error) {
	out := new(CloseSessionResponse)
	err := c.cc.Invoke(ctx, "/clusterpb.Member/CloseSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MemberServer is the server API for Member service.
type MemberServer interface {
	HandleRequest(context.Context, *RequestMessage) (*MemberHandleResponse, error)
	HandleNotify(context.Context, *NotifyMessage) (*MemberHandleResponse, error)
	HandlePush(context.Context, *PushMessage) (*MemberHandleResponse, error)
	HandleResponse(context.Context, *ResponseMessage) (*MemberHandleResponse, error)
	NewMember(context.Context, *NewMemberRequest) (*NewMemberResponse, error)
	DelMember(context.Context, *DelMemberRequest) (*DelMemberResponse, error)
	SessionClosed(context.Context, *SessionClosedRequest) (*SessionClosedResponse, error)
	CloseSession(context.Context, *CloseSessionRequest) (*CloseSessionResponse, error)
}

// UnimplementedMemberServer can be embedded to have forward compatible implementations.
type UnimplementedMemberServer struct {
}

func (*UnimplementedMemberServer) HandleRequest(ctx context.Context, req *RequestMessage) (*MemberHandleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleRequest not implemented")
}
func (*UnimplementedMemberServer) HandleNotify(ctx context.Context, req *NotifyMessage) (*MemberHandleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleNotify not implemented")
}
func (*UnimplementedMemberServer) HandlePush(ctx context.Context, req *PushMessage) (*MemberHandleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandlePush not implemented")
}
func (*UnimplementedMemberServer) HandleResponse(ctx context.Context, req *ResponseMessage) (*MemberHandleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleResponse not implemented")
}
func (*UnimplementedMemberServer) NewMember(ctx context.Context, req *NewMemberRequest) (*NewMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewMember not implemented")
}
func (*UnimplementedMemberServer) DelMember(ctx context.Context, req *DelMemberRequest) (*DelMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelMember not implemented")
}
func (*UnimplementedMemberServer) SessionClosed(ctx context.Context, req *SessionClosedRequest) (*SessionClosedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessionClosed not implemented")
}
func (*UnimplementedMemberServer) CloseSession(ctx context.Context, req *CloseSessionRequest) (*CloseSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseSession not implemented")
}

func RegisterMemberServer(s *grpc.Server, srv MemberServer) {
	s.RegisterService(&_Member_serviceDesc, srv)
}

func _Member_HandleRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServer).HandleRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterpb.Member/HandleRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServer).HandleRequest(ctx, req.(*RequestMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Member_HandleNotify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServer).HandleNotify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterpb.Member/HandleNotify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServer).HandleNotify(ctx, req.(*NotifyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Member_HandlePush_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServer).HandlePush(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterpb.Member/HandlePush",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServer).HandlePush(ctx, req.(*PushMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Member_HandleResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponseMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServer).HandleResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterpb.Member/HandleResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServer).HandleResponse(ctx, req.(*ResponseMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Member_NewMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServer).NewMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterpb.Member/NewMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServer).NewMember(ctx, req.(*NewMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Member_DelMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServer).DelMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterpb.Member/DelMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServer).DelMember(ctx, req.(*DelMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Member_SessionClosed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionClosedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServer).SessionClosed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterpb.Member/SessionClosed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServer).SessionClosed(ctx, req.(*SessionClosedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Member_CloseSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServer).CloseSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterpb.Member/CloseSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServer).CloseSession(ctx, req.(*CloseSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Member_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clusterpb.Member",
	HandlerType: (*MemberServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleRequest",
			Handler:    _Member_HandleRequest_Handler,
		},
		{
			MethodName: "HandleNotify",
			Handler:    _Member_HandleNotify_Handler,
		},
		{
			MethodName: "HandlePush",
			Handler:    _Member_HandlePush_Handler,
		},
		{
			MethodName: "HandleResponse",
			Handler:    _Member_HandleResponse_Handler,
		},
		{
			MethodName: "NewMember",
			Handler:    _Member_NewMember_Handler,
		},
		{
			MethodName: "DelMember",
			Handler:    _Member_DelMember_Handler,
		},
		{
			MethodName: "SessionClosed",
			Handler:    _Member_SessionClosed_Handler,
		},
		{
			MethodName: "CloseSession",
			Handler:    _Member_CloseSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cluster.proto",
}
